import React, { useState } from 'react'
import ReactDOM from 'react-dom'

/* Display & button */

const Display = props => <div><h1>Leave your feedback:</h1>{props.state}</div>

const Button = (props) => (
  <button onClick={props.handleClick}>
    {props.text}
  </button>
)

const Statistics = (good, neutral, bad, allClicks) => {
  
  return(
    <div>
      <div text="Good votes" value ={good} />
      <div text="Neutral votes" value ={neutral} />
      <div text="Bad votes" value ={bad} />
      <div text="All votes" value ={allClicks} />
    </div>
  )
}

const App = () => {
  const [good, setGood] = useState(0)
  const [neutral, setNeutral] = useState(0)
  const [bad, setBad] = useState(0)
  const [value, setValue] = useState(0)
  const [allClicks, setAll] = useState(0)

  if (allClicks === 0) {
    return <div>
    <Display />
    <Button handleClick={() => {
      setGood(good + 1) 
      setValue(value + 1) 
      setAll(allClicks + 1)}} text="Good" />
    <Button handleClick={() => {
      setNeutral(neutral + 1) 
      setValue(value + 0) 
      setAll(allClicks + 1)}} text="Neutral" />
    <Button handleClick={() => {
      setBad(bad + 1)
      setValue(value - 1) 
      setAll(allClicks + 1)}} text="Bad" />

    <div><h1>Statistics:</h1></div>

    <div>Statistics are shown by placing a vote.</div>

  </div>
  }

  return (
    <div>
      <Display />
      <Button handleClick={() => {
        setGood(good + 1) 
        setValue(value + 1) 
        setAll(allClicks + 1)}} text="Good" />
      <Button handleClick={() => {
        setNeutral(neutral + 1) 
        setValue(value + 0) 
        setAll(allClicks + 1)}} text="Neutral" />
      <Button handleClick={() => {
        setBad(bad + 1)
        setValue(value - 1) 
        setAll(allClicks + 1)}} text="Bad" />

      <div><h1>Statistics:</h1></div>

      <Statistics good={good } />
      <Statistics neutral={neutral} />
      <Statistics bad={bad} />
      <Statistics all = {bad + good + neutral}  />
      <Statistics average = {value}  />
      <Statistics percentpositivetotal = {good / allClicks * 100} />

        <table>
          <thead>
            <tr><th></th></tr>
          </thead>
          <tbody>
            <tr> 
                <td>Good feedback:</td>
                <td>{good}</td>
            </tr>
            <tr>    
                <td>Neutral feedback:</td> 
                <td>{neutral}</td> 
            </tr>
            <tr>
                <td>Bad feedback:</td>
                <td>{bad}</td> 
            </tr>
            <tr>
              <td>All feedback:</td>
              <td>{bad + good + neutral}</td>
            </tr>
            <tr>
              <td>Average:</td>
              <td>{value}</td>
            </tr>
            <tr> 
              <td>Percentage positive:</td>
              <td>{good / allClicks * 100} %</td>
              </tr>   
        </tbody>
        </table>
    </div>
  )
 }

ReactDOM.render(
  <App />, 
  document.getElementById('root')
)

 

 /* Random:

const handleClick = () => {
    setGood(setGood.concat('Good'))
    setGood(good + 1)
  }

  return(
    <div>
      <div text="Good votes" value ={good} />
      <div text="Neutral votes" value ={neutral} />
      <div text="Bad votes" value ={bad} />
      <div text="All votes" value ={allClicks} />
    </div>
  )
}

if (all === 0) {
    return (
      <div>
        the app is used by pressing the buttons
      </div>
    )
  }


/* ---taulukko yritys----
  const Statistics = (good, neutral, bad, allClicks) => {
  
  return(
    <table>
      <thead>
        <tr>
          <th text="Good votes" value ={good} />
          <th text="Neutral votes" value ={neutral} />
          <th text="Bad votes" value ={bad} />
          <th text="All votes" value ={allClicks} />
        </tr>
      </thead>
    </table>
  )
}

 */
